### IMPORTANT: I CURRENTLY DO NOT USE TMUX

### ───────────────────────────────
### 🧠 Basic Settings
### ───────────────────────────────
set -g set-clipboard external
set -g allow-passthrough on
set -g history-limit 10000
set -g bell-action none
set -g remain-on-exit on
# Small delay to ensure mouse events are processed correctly
set -g escape-time 0
set -g default-terminal "tmux-256color"
set -sa terminal-features ",xterm*:RGB"
set -ag terminal-overrides ",tmux-256color:RGB:clipboard"
# Pass through specific key combinations to the terminal
set -g assume-paste-time 0
# Enable extended keys for better key handling
set -g extended-keys on
# Allow Shift+Enter to work properly
bind-key -n S-Enter send-keys '\n'
set -g base-index 1
setw -g pane-base-index 1
setw -g mode-keys vi
set -g status-keys vi

### ───────────────────────────────
### 🎛 Prefix Key (Spacemacs-style)
### ───────────────────────────────
# I wanted to use <space> as the leader-key (prefix) but tmux doesn't have a 'modes' concept and intercepts the keystrokes. It's easiest to just
# keep the default keybinding and map iterm2 to intercept `cmd-a` and interpret it as `C-b`
#
# unbind C-b
# set -g prefix Space
# bind Space send-prefix
# set -g repeat-time 500

unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux config reloaded 🔄"

### ───────────────────────────────
### Session Management
### ───────────────────────────────
bind q detach-client                           # Close session (detach)
bind Q confirm-before -p "Kill session #S?" "kill-session"  # Kill session with confirmation
bind s choose-session

### ───────────────────────────────
### 🧭 Navigation (Vi-style with C-h/j/k/l)
### ───────────────────────────────
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

### ───────────────────────────────
### 🔀 Pane Management
### ───────────────────────────────
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind x kill-pane

# Resize panes with arrows (after prefix)
bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5

### ───────────────────────────────
### 📂 Window & Session Management
### ───────────────────────────────
bind c new-window
bind & kill-window
bind , command-prompt "rename-window '%%'"
bind n next-window
bind p previous-window

bind s choose-session
bind $ command-prompt -I "#S" "rename-session '%%'"
bind d detach-client

### ───────────────────────────────
### 💡 Which-key-style Reference
### ───────────────────────────────
# <Space> c       → new window
# <Space> ,       → rename window
# <Space> | / -   → split pane horizontally / vertically
# <Space> h/j/k/l → navigate between panes
# <Space> ←/→     → resize pane left/right
# <Space> n/p     → next / previous window
# <Space> s       → choose session
# <Space> x       → kill current pane
# <Space> r       → reload tmux.conf
set -g @menus_trigger '|'

### Mouse Settings
set -g mouse on
set -g @yank_selection_mouse 'clipboard'

# Better mouse wheel scrolling
# Scroll 3 lines at a time in copy mode for finer control
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 3 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 3 scroll-down

# Outside copy mode, wheel up enters copy mode so you can scroll back
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Double-click to select word and copy to clipboard
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word \; send-keys -X copy-pipe-and-cancel "pbcopy"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-word \; send-keys -X copy-pipe-and-cancel "pbcopy"

# Triple-click to select line and copy to clipboard
bind -T copy-mode-vi TripleClick1Pane select-pane \; send-keys -X select-line \; send-keys -X copy-pipe-and-cancel "pbcopy"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-line \; send-keys -X copy-pipe-and-cancel "pbcopy"

# Mouse drag selection with highlight and copy
bind -T copy-mode-vi MouseDrag1Pane select-pane \; send-keys -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Right-click to enter copy mode
bind -n MouseDown3Pane if-shell -F -t= "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -t=; copy-mode -M"

# Standard copy in vi mode
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# Add Enter key for convenient copying (like in vim)
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# Escape exits copy mode
bind -T copy-mode-vi Escape send-keys -X cancel
set -g @yank_action 'copy-pipe-and-cancel'

### Plugins
set -g @plugin 'tmux-plugins/tpm'
# Add more plugins here...
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jaclu/tmux-menus'
# Catppuccin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "rounded"

# set -g @catppuccin_window_default_text " #{b:pane_current_path}"
# set -g @catppuccin_window_text " #{b:pane_current_path}"
# set -g @catppuccin_window_current_text " #{b:pane_current_path}"
set -g @catppuccin_window_default_text " #{pane_current_command}"
set -g @catppuccin_window_text " #{pane_current_command}"
set -g @catppuccin_window_current_text " #{pane_current_command}"
set -g @catppuccin_date_time_text " %d-%m %H:%M"

set -g @plugin 'catppuccin/tmux'
# End Catppuccin

# TPM bootstrap
run '~/.config/tmux/plugins/tpm/tpm'

### ───────────────────────────────
### 🎨 Status Line
### ───────────────────────────────
#
setw -g automatic-rename on
setw -g allow-rename off
# setw -g automatic-rename-format "#{b:pane_current_path}"
setw -g automatic-rename-format "#{pane_current_command}"
set -g status-position top
set -g status-right-length 100
set -g status-left-length 100
# Show mode indicators in status line: [N]ormal, [P]refix, or [C]opy mode
# This provides visual feedback about which mode you're in
set -g status-left ""
set -ga status-left "#{?client_prefix,#[fg=#{@thm_red} bold]P ,#{?pane_in_mode,#[fg=#{@thm_yellow} bold]C ,#[fg=#{@thm_green} bold]N }}"
set -g status-right "#{E:@catppuccin_status_directory} #{E:@catppuccin_status_application} #{E:@catppuccin_status_session} #{E:@catppuccin_status_date_time}"
